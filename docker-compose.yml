services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-audiostack}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build: ./backend
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      UPLOAD_DIR: ${UPLOAD_DIR:-uploads}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-26214400}
      DEFAULT_ADMIN_USERNAME: ${DEFAULT_ADMIN_USERNAME:-admin}
      DEFAULT_ADMIN_PASSWORD: ${DEFAULT_ADMIN_PASSWORD:-admin123}
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-5000}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - '5001:5000'
    volumes:
      - ./backend/uploads:/app/uploads
    command:
      [
        'sh',
        '-c',
        'npx prisma generate && npx prisma db push && node dist/index.js',
      ]

  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
    stdin_open: true
    tty: true

volumes:
  db_data:
